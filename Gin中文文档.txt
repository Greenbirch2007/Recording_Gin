

Gin中文文档

https://www.jianshu.com/p/4a16db3a02f8


Gin是一个用golang编写的web框架

它是类似于martini但拥有更好性能的APIKUANGJAI

由于httprouter，速度提高了40倍


特性


1.快速

基于Radix树的路由，小内存占用。没有反射。可预测的api性能

2. 支持中间件


传入的http请求可以由一系列中间件和最终操作来处理。

例如：Logger,Authorization,GZIP

最终最终操作DB

3. Crash处理

Gin可以catch一个发生在HTTP请求中panic并recover它

这样，你的服务器将始终可以用。

例如，可以向Sentry报告这个panic


4. JSON验证


Gin可以解析并验证请求的JSON,例如检查所需值的存在


5. 路由组

更好地组织路由。是否需要授权，
不同的api版本，这些组可以无限制地嵌套而不会降低性能


6.错误管理


Gin提供了一种方便的方法来手机HTTP请求期间发生的所有错误。
最终，中间件可以将它们写入日志文件，数据库并通过网络发送


7. 内置渲染

Gin为JSON,XML,HTML渲染提供了易于使用的api


8. 可扩展性

新建一个中间件很简单


1. 安装gin

github.com/gin-gonic/gin

2. 将gin引入到代码中


import "gin-gonic/gin"


3. (可选)如果使用诸如http.StatusOK之类的常量，
则需要引入net/http包

import "net/http"

可以使用Govendor工具创建项目

1. go get govendor
2. 创建项目并且cd到项目目录中

3. 使用govendor初始化项目，并且引入gin
4. 复制启动文件模板到项目目录中

5. 启动项目


基准测试

Gin使用了自定义版本的HttpRouter
(1) 在一定的时间内实现的总调用数，越高越好
(2) 单次操作耗时(ns/op),越低越好
(3) 堆内存分配(B/op),越低越好
(4) 每次操作的平均分配次数(allocs/op),越低越好


特性


Gin v1稳定的特性

1. 零分配路由
2. 仍然是最快的http路由器和框架
3. 完整的单元测试支持
4. 实战考研
5.  api冻结，新版本的发布不会破坏你的代码


Jsoniter

使用jsoniter编译

Gin使用encoding/json作为默认的json包，但是
可以在编译中使用标签将其修改为jsoniter

AsciiJSON


使用AsciiJSON生成具有转义的非ASCII字符的ASCII-only JSON

HTML渲染

使用LoadHTMLGlob()或LoadHTMLFiles()


自定义模板渲染器

可以使用自定义的html模板渲染

自定义分隔符



自定义模板功能

HTTP2 server推送


http.Pusher

JSONP


使用JSONP向不同域的服务器请求数据。如果查询参数存在回调，则将
回调添加到响应体中


Multipart/Urlencoded 绑定

Multipart/Urllencoded 表单


PureJSON

通常，JSON使用unicode替换特殊HTML字符，
如果要安字面对这些字符进行编码，则可以使用PureJSON

Query和post form

SecureJSON

使用SecureJSON防止json劫持。如果给定的结构是数组值，则默认预置"while(1),"到响应体

xml/json/yaml/protobuf渲染


上传文件


单个文件

多文件

不使用默认的中间件


使用 

r := gin.New()


代替

// Default 使用Logger和Recovery中间件

r := gin.Default()



从reader读取数据

如何重启或停止web服务器


可以使用fvbock/endless来替换默认的ListenAndServe


router := gin.Default()
router.GET("/",handler)
// [...]

endless.ListenAndServe(":4242",router)
替代方案


1.manners:可以关闭go http服务器
2. graceful:Graceful是一个go扩展包，可以关闭http.handler服务器
3. grace:go服务器平滑重启和零停机时间部署


可以考虑http.Server内置的Shutdown()方法关机


使用BasicAuth中间件


使用HTTP方法

使用中间件


只绑定url查询字符串

ShouldBindQuery函数只绑定url查询参数而忽略post数据

在中间件中使用Goroutine

当在中间件或handler中启动新的Goroutine时，
不能使用原始的上下文，必须使用只读副本


多模板


Gin默认允许值使用一个html模板


如何记录日志


定义路由日志的格式

默认的路由日志格式


如果想要以指定的格式(例如JSON,key values或其他格式)
记录信息，则可以使用gin.DebugPrintRouteFunc指定格式


使用标准日志包记录所有路由，但可以使用其他满足需求的日志工具


将request body绑定到不同的结构体中

一般通过调用c.Request.Body方法绑定数据，但不能多次调用这个方法


要想多次绑定，可以使用c.ShouldBindBodyWith



用户

使用Gin web框架的

使用 Gin web 框架的知名项目：

gorush：Go 编写的通知推送服务器。
fnproject：原生容器，云 serverless 平台。
photoprism：由 Go 和 Google TensorFlow 提供支持的个人照片管理工具。
krakend：拥有中间件的超高性能 API 网关。
picfit：Go 编写的图像尺寸调整服务器。
gotify：使用实时 web socket 做消息收发的简单服务器。
cds：企业级持续交付和 DevOps 自动化开源平台。











